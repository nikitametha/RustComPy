
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'DDEB47B261F098736E6EE3E3DCC61FAA'
    
_lr_action_items = {'STR':([21,],[54,]),'KEYWORD':([0,1,2,5,7,8,10,11,12,16,17,18,19,20,22,23,24,28,29,30,39,51,53,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,86,],[1,-7,-41,1,-30,-29,-1,-42,-24,1,-11,-42,1,1,-39,1,-32,-38,-31,1,-10,1,79,-40,-5,-33,-26,-17,-19,-25,-18,-16,-35,-37,-15,-14,-20,-27,-22,-23,-36,-21,-28,-34,-21,1,-9,1,1,-2,-8,]),'NUMBER':([0,1,2,4,5,7,8,9,10,11,12,14,16,17,18,19,20,22,23,24,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,86,],[2,2,-41,2,2,-30,-29,2,-1,-42,-24,2,2,-11,-42,2,2,-39,2,-32,2,-38,-31,2,2,2,2,2,2,2,2,2,-10,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-40,2,-5,-33,-26,-17,-19,-25,-18,-16,-35,-37,-15,-14,-20,-27,-22,-23,-36,-21,-28,-34,-21,2,-9,2,2,-2,-8,]),'PRINT':([0,1,2,5,7,8,10,11,12,16,17,18,19,20,22,23,24,28,29,30,39,51,53,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,86,],[3,-7,-41,3,-30,-29,-1,-42,-24,3,-11,-42,3,3,-39,3,-32,-38,-31,3,-10,3,3,-40,-5,-33,-26,-17,-19,-25,-18,-16,-35,-37,-15,-14,-20,-27,-22,-23,-36,-21,-28,-34,-21,3,-9,3,3,-2,-8,]),'MUL':([2,7,8,11,12,17,18,20,22,24,25,28,29,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,84,],[-41,-30,-29,-42,-24,45,-42,45,45,-32,45,45,-31,-40,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-22,-23,45,45,45,45,45,45,45,]),'DIV':([2,7,8,11,12,17,18,20,22,24,25,28,29,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,84,],[-41,-30,-29,-42,-24,46,-42,46,46,-32,46,46,-31,-40,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-22,-23,46,46,46,46,46,46,46,]),'MINUS':([0,1,2,4,5,7,8,9,10,11,12,14,16,17,18,19,20,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,],[4,4,-41,4,4,-30,-29,4,-1,-42,-24,4,4,48,-42,4,52,-39,4,-32,48,4,48,-31,4,4,4,4,4,4,4,4,4,-10,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-40,48,4,-5,48,48,48,48,48,48,48,48,48,48,48,-20,48,-22,-23,48,-21,48,48,-21,4,-9,48,4,52,-2,-8,]),'LE':([2,7,8,11,12,17,18,20,22,24,25,28,29,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,84,],[-41,-30,-29,-42,-24,33,-42,33,-39,-32,33,33,-31,-40,33,33,33,33,33,33,-18,-16,33,33,33,-14,-20,33,-22,-23,33,-21,33,33,-21,33,33,]),'RPAREN':([2,7,8,12,18,22,24,25,28,29,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,],[-41,-30,-29,-24,-42,-39,-32,55,-38,-31,80,-40,-33,-26,-17,-19,-25,-18,-16,-35,-37,-15,-14,-20,-27,-22,-23,-36,-21,-28,-34,]),'NE':([2,7,8,11,12,17,18,20,22,24,25,28,29,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,84,],[-41,-30,-29,-42,-24,34,-42,34,-39,-32,34,34,-31,-40,34,34,34,34,34,34,-18,-16,34,34,34,-14,-20,34,-22,-23,34,-21,34,34,-21,34,34,]),'SEMCOL':([2,7,8,11,12,17,18,22,24,28,29,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,84,],[-41,-30,-29,-42,-24,39,-42,-39,-32,-38,-31,-40,81,-33,-26,-17,-19,-25,-18,-16,-35,-37,-15,-14,-20,-27,-22,-23,-36,-21,-28,-34,-21,85,86,39,]),'LT':([2,7,8,11,12,17,18,20,22,24,25,28,29,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,84,],[-41,-30,-29,-42,-24,37,-42,37,-39,-32,37,37,-31,-40,37,37,37,37,37,37,-18,-16,37,37,37,-14,-20,37,-22,-23,37,-21,37,37,-21,37,37,]),'PLUS':([2,7,8,11,12,17,18,20,22,24,25,28,29,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,84,],[-41,-30,-29,-42,-24,43,-42,43,-39,-32,43,43,-31,-40,43,43,43,43,43,43,43,43,43,43,43,43,-20,43,-22,-23,43,-21,43,43,-21,43,43,]),'MULEQ':([2,7,8,11,12,17,18,20,22,24,25,28,29,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,84,],[-41,-30,-29,-42,-24,44,-42,44,-39,-32,44,44,-31,-40,44,44,44,44,44,44,-18,-16,44,44,44,-14,-20,44,-22,-23,44,-21,44,44,-21,44,44,]),'INCREMENT':([0,1,2,4,5,7,8,9,10,11,12,14,16,17,18,19,20,22,23,24,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,86,],[6,6,-41,6,6,-30,-29,6,-1,-42,-24,6,6,-11,-42,6,6,-39,6,-32,6,-38,-31,6,6,6,6,6,6,6,6,6,-10,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-40,6,-5,-33,-26,-17,-19,-25,-18,-16,-35,-37,-15,-14,-20,-27,-22,-23,-36,-21,-28,-34,-21,6,-9,6,6,-2,-8,]),'BITOR':([2,7,8,11,12,17,18,20,22,24,25,28,29,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,84,],[-41,-30,-29,-42,-24,47,-42,47,-39,-32,47,47,-31,-40,47,47,47,47,47,47,-18,-16,47,47,47,-14,-20,47,-22,-23,47,-21,47,47,-21,47,47,]),'DIVEQ':([2,7,8,11,12,17,18,20,22,24,25,28,29,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,84,],[-41,-30,-29,-42,-24,49,-42,49,-39,-32,49,49,-31,-40,49,49,49,49,49,49,-18,-16,49,49,49,-14,-20,49,-22,-23,49,-21,49,49,-21,49,49,]),'$end':([1,2,5,7,8,10,11,12,17,18,22,23,24,28,29,39,51,53,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,86,],[-7,-41,0,-30,-29,-1,-42,-24,-11,-42,-39,-6,-32,-38,-31,-10,-13,-3,-40,-5,-33,-26,-17,-19,-25,-18,-16,-35,-37,-15,-14,-20,-27,-22,-23,-36,-21,-28,-34,-21,-7,-9,-4,-11,-2,-8,]),'GT':([2,7,8,11,12,17,18,20,22,24,25,28,29,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,84,],[-41,-30,-29,-42,-24,42,-42,42,-39,-32,42,42,-31,-40,42,42,42,42,42,42,-18,-16,42,42,42,-14,-20,42,-22,-23,42,-21,42,42,-21,42,42,]),'PLEQ':([2,7,8,11,12,17,18,20,22,24,25,28,29,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,84,],[-41,-30,-29,-42,-24,35,-42,35,-39,-32,35,35,-31,-40,35,35,35,35,35,35,-18,-16,35,35,35,-14,-20,35,-22,-23,35,-21,35,35,-21,35,35,]),'EQUALS':([11,27,],[26,57,]),'MINEQ':([2,7,8,11,12,17,18,20,22,24,25,28,29,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,84,],[-41,-30,-29,-42,-24,32,-42,32,-39,-32,32,32,-31,-40,32,32,32,32,32,32,-18,-16,32,32,32,-14,-20,32,-22,-23,32,-21,32,32,-21,32,32,]),'BITAND':([2,7,8,11,12,17,18,20,22,24,25,28,29,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,84,],[-41,-30,-29,-42,-24,38,-42,38,-39,-32,38,38,-31,-40,38,38,38,38,38,38,-18,-16,38,38,38,-14,-20,38,-22,-23,38,-21,38,38,-21,38,38,]),'LPAREN':([0,1,2,3,4,5,7,8,9,10,11,12,14,16,17,18,19,20,22,23,24,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,86,],[9,9,-41,21,9,9,-30,-29,9,-1,-42,-24,9,9,-11,-42,9,9,-39,9,-32,9,-38,-31,9,9,9,9,9,9,9,9,9,-10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-40,9,-5,-33,-26,-17,-19,-25,-18,-16,-35,-37,-15,-14,-20,-27,-22,-23,-36,-21,-28,-34,-21,9,-9,9,9,-2,-8,]),'BLOCKEND':([1,2,7,8,10,11,12,17,18,22,23,24,28,29,30,39,51,53,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,86,],[-7,-41,-30,-29,-1,-42,-24,-11,-42,-39,-6,-32,-38,-31,58,-10,-13,-3,-40,-5,-33,-26,-17,-19,-25,-18,-16,-35,-37,-15,-14,-20,-27,-22,-23,-36,-21,-28,-34,-21,-7,-9,-4,-11,-2,-8,]),'EQ':([2,7,8,11,12,17,18,20,22,24,25,28,29,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,84,],[-41,-30,-29,-42,-24,36,-42,36,-39,-32,36,36,-31,-40,36,36,36,36,36,36,-18,-16,36,36,36,-14,-20,36,-22,-23,36,-21,36,36,-21,36,36,]),'AND':([2,7,8,11,12,17,18,20,22,24,25,28,29,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,84,],[-41,-30,-29,-42,-24,31,-42,31,-39,-32,31,31,-31,-40,31,31,31,31,31,31,-18,-16,31,31,31,-14,-20,31,-22,-23,31,-21,31,31,-21,31,31,]),'MAIN':([0,1,2,5,7,8,10,11,12,16,17,18,19,20,22,23,24,28,29,30,39,51,53,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,86,],[10,-7,-41,10,-30,-29,-1,-42,-24,10,-11,-42,10,10,-39,10,-32,-38,-31,10,-10,10,10,-40,-5,-33,-26,-17,-19,-25,-18,-16,-35,-37,-15,-14,-20,-27,-22,-23,-36,-21,-28,-34,-21,10,-9,10,10,-2,-8,]),'NAME':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,86,],[11,18,-41,18,11,24,-30,-29,18,-1,-42,-24,27,18,29,11,-11,-42,11,11,-39,11,-32,18,-38,-31,11,18,18,18,18,18,18,18,18,-10,18,18,18,18,18,18,18,18,18,18,18,11,18,11,-40,18,-5,-33,-26,-17,-19,-25,-18,-16,-35,-37,-15,-14,-20,-27,-22,-23,-36,-21,-28,-34,-21,11,-9,11,11,-2,-8,]),'GE':([2,7,8,11,12,17,18,20,22,24,25,28,29,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,84,],[-41,-30,-29,-42,-24,41,-42,41,-39,-32,41,41,-31,-40,41,41,41,41,41,41,-18,-16,41,41,41,-14,-20,41,-22,-23,41,-21,41,41,-21,41,41,]),'BITNOT':([2,7,8,11,12,17,18,20,22,24,25,28,29,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,84,],[-41,-30,-29,-42,-24,40,-42,40,-39,-32,40,40,-31,-40,40,40,40,40,40,40,-18,-16,40,40,40,-14,-20,40,-22,-23,40,-21,40,40,-21,40,40,]),'LET':([0,1,2,5,7,8,10,11,12,16,17,18,19,20,22,23,24,28,29,30,39,51,53,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,86,],[13,-7,-41,13,-30,-29,-1,-42,-24,13,-11,-42,13,13,-39,13,-32,-38,-31,13,-10,13,13,-40,-5,-33,-26,-17,-19,-25,-18,-16,-35,-37,-15,-14,-20,-27,-22,-23,-36,-21,-28,-34,-21,13,-9,13,13,-2,-8,]),'NOT':([0,1,2,4,5,7,8,9,10,11,12,14,16,17,18,19,20,22,23,24,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,86,],[14,14,-41,14,14,-30,-29,14,-1,-42,-24,14,14,-11,-42,14,14,-39,14,-32,14,-38,-31,14,14,14,14,14,14,14,14,14,-10,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-40,14,-5,-33,-26,-17,-19,-25,-18,-16,-35,-37,-15,-14,-20,-27,-22,-23,-36,-21,-28,-34,-21,14,-9,14,14,-2,-8,]),'DECREMENT':([0,1,2,4,5,7,8,9,10,11,12,14,16,17,18,19,20,22,23,24,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,86,],[15,15,-41,15,15,-30,-29,15,-1,-42,-24,15,15,-11,-42,15,15,-39,15,-32,15,-38,-31,15,15,15,15,15,15,15,15,15,-10,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-40,15,-5,-33,-26,-17,-19,-25,-18,-16,-35,-37,-15,-14,-20,-27,-22,-23,-36,-21,-28,-34,-21,15,-9,15,15,-2,-8,]),'BLOCKSTART':([0,1,2,5,7,8,10,11,12,16,17,18,19,20,22,23,24,28,29,30,39,51,53,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,86,],[16,-7,-41,16,-30,-29,-1,-42,-24,16,-11,-42,16,16,-39,16,-32,-38,-31,16,-10,16,16,-40,-5,-33,-26,-17,-19,-25,-18,-16,-35,-37,-15,-14,-20,-27,-22,-23,-36,-21,-28,-34,-21,16,-9,16,16,-2,-8,]),'OR':([2,7,8,11,12,17,18,20,22,24,25,28,29,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,84,],[-41,-30,-29,-42,-24,50,-42,50,-39,-32,50,50,-31,-40,50,50,50,50,50,50,-18,-16,50,50,50,-14,-20,50,-22,-23,50,-21,50,50,-21,50,50,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decrement_exp':([0,1,4,5,9,14,16,19,20,23,26,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,57,79,83,84,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'increment_exp':([0,1,4,5,9,14,16,19,20,23,26,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,57,79,83,84,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'binop_exp':([0,1,4,5,9,14,16,19,20,23,26,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,57,79,83,84,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'while_expression':([1,79,],[19,19,]),'statement':([0,5,16,19,20,23,30,51,53,79,83,84,],[5,23,30,51,53,23,23,23,23,83,23,53,]),'expression':([0,1,4,5,9,14,16,19,20,23,26,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,57,79,83,84,],[17,20,22,17,25,28,17,17,17,17,56,17,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,17,78,17,82,84,17,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> MAIN','statement',1,'p_main_dec','LexYacc.py',224),
  ('statement -> PRINT LPAREN STR RPAREN SEMCOL','statement',5,'p_print_stat','LexYacc.py',228),
  ('statement -> KEYWORD expression statement','statement',3,'p_if_statement','LexYacc.py',233),
  ('statement -> KEYWORD expression statement KEYWORD statement','statement',5,'p_if_else_statement','LexYacc.py',241),
  ('statement -> BLOCKSTART statement BLOCKEND','statement',3,'p_block_declaration','LexYacc.py',249),
  ('statement -> statement statement','statement',2,'p_multiple_statement','LexYacc.py',253),
  ('statement -> KEYWORD','statement',1,'p_statement_break_cont','LexYacc.py',306),
  ('statement -> LET NAME EQUALS expression SEMCOL','statement',5,'p_statement_declaration_assign','LexYacc.py',311),
  ('statement -> NAME EQUALS expression SEMCOL','statement',4,'p_statement_dec','LexYacc.py',332),
  ('statement -> expression SEMCOL','statement',2,'p_statement_expr2','LexYacc.py',339),
  ('statement -> expression','statement',1,'p_statement_expr','LexYacc.py',344),
  ('while_expression -> expression','while_expression',1,'p_while_exp','LexYacc.py',349),
  ('statement -> KEYWORD while_expression statement','statement',3,'p_statement_while','LexYacc.py',352),
  ('expression -> expression GT expression','expression',3,'p_expression_relop','LexYacc.py',361),
  ('expression -> expression GE expression','expression',3,'p_expression_relop','LexYacc.py',362),
  ('expression -> expression LT expression','expression',3,'p_expression_relop','LexYacc.py',363),
  ('expression -> expression LE expression','expression',3,'p_expression_relop','LexYacc.py',364),
  ('expression -> expression EQ expression','expression',3,'p_expression_relop','LexYacc.py',365),
  ('expression -> expression NE expression','expression',3,'p_expression_relop','LexYacc.py',366),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','LexYacc.py',379),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','LexYacc.py',380),
  ('expression -> expression MUL expression','expression',3,'p_expression_binop','LexYacc.py',381),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','LexYacc.py',382),
  ('expression -> binop_exp','expression',1,'p_expression_binop_assign','LexYacc.py',392),
  ('binop_exp -> expression PLEQ expression','binop_exp',3,'p_binop_assign','LexYacc.py',395),
  ('binop_exp -> expression MINEQ expression','binop_exp',3,'p_binop_assign','LexYacc.py',396),
  ('binop_exp -> expression MULEQ expression','binop_exp',3,'p_binop_assign','LexYacc.py',397),
  ('binop_exp -> expression DIVEQ expression','binop_exp',3,'p_binop_assign','LexYacc.py',398),
  ('expression -> increment_exp','expression',1,'p_increment_first','LexYacc.py',405),
  ('expression -> decrement_exp','expression',1,'p_decrement_first','LexYacc.py',408),
  ('decrement_exp -> DECREMENT NAME','decrement_exp',2,'p_decrement','LexYacc.py',411),
  ('increment_exp -> INCREMENT NAME','increment_exp',2,'p_increment','LexYacc.py',415),
  ('expression -> expression AND expression','expression',3,'p_expression_logop','LexYacc.py',419),
  ('expression -> expression OR expression','expression',3,'p_expression_logop','LexYacc.py',420),
  ('expression -> expression BITAND expression','expression',3,'p_expression_logop','LexYacc.py',421),
  ('expression -> expression BITOR expression','expression',3,'p_expression_logop','LexYacc.py',422),
  ('expression -> expression BITNOT expression','expression',3,'p_expression_logop','LexYacc.py',423),
  ('expression -> NOT expression','expression',2,'p_expression_logop','LexYacc.py',424),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','LexYacc.py',434),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','LexYacc.py',439),
  ('expression -> NUMBER','expression',1,'p_expression_number','LexYacc.py',443),
  ('expression -> NAME','expression',1,'p_expression_name','LexYacc.py',448),
]
